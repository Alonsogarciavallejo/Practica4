public class CalculadoraDistancias {

    /**
     * Calcula la distancia de edición entre las cadenas `s1` y `s2`.
     */
    public static int calcularDistancia(String s1, String s2) {
        return calcularDistanciaRecursiva(s1, s2, s1.length(), s2.length());
    }

    private static int calcularDistanciaRecursiva(String s1, String s2, int m, int n) {
        // Si una de las cadenas es vacía, la distancia es la longitud de la otra cadena
        if (m == 0) return n;
        if (n == 0) return m;

        // Si los últimos caracteres de ambas cadenas son iguales, ignoramos y procesamos las cadenas restantes
        if (s1.charAt(m - 1) == s2.charAt(n - 1)) {
            return calcularDistanciaRecursiva(s1, s2, m - 1, n - 1);
        }

        // Si los últimos caracteres son diferentes, consideramos las tres operaciones posibles
        int eliminar = 1 + calcularDistanciaRecursiva(s1, s2, m - 1, n);
        int insertar = 1 + calcularDistanciaRecursiva(s1, s2, m, n - 1);
        int reemplazar = 1 + calcularDistanciaRecursiva(s1, s2, m - 1, n - 1);

        // Devolvemos el mínimo de las tres operaciones
        return Math.min(eliminar, Math.min(insertar, reemplazar));
    }
}